name: Test json path
description: Test skipping json path defined in config file
skip: False
binary_path: echo
default_parameters:
  log_file: json_path.log
#
text_output: &AS_TEXT
  treat_as: text
bytes_output: &AS_BYTES
  treat_as: bytes
json_output: &AS_JSON
  treat_as: json
#
default_parameters: &DEFAULT_TEST_PARAMETERS
  log_file: logs/XMLoader.log
  stdin:
    file_path: [../../tests_data/examples/stdin/, ignore_fields_actual.json]
    treat_as: bytes
  stdout: &STDOUT
    <<: *AS_JSON
  stderr: &STDERR
    <<: *AS_TEXT
    directory: &ERR_DIR ../../tests_data/examples/stderr/
  expected_stdout: &EXPECTED_STDOUT
    <<: *AS_JSON
    directory: &EXPECTED_RESULTS_DIR ../../tests_data/examples/expected_stdout/   
  expected_return_code: 0
#
tests:
  - test: "skip simple path in root"
    binary_path: echo
    skip: False
    arguments:
      - -n
      - "{\"name\": \"John\",  \"age\": 33, \"city\": \"Ontario\"}"
    stdout:
      treat_as: json
    expected_stdout:
      treat_as: json
      ignore_fields:
        - age
        - city
      content: "{\"name\": \"John\",  \"age\": 30, \"city\": \"New York\"}"

  - test: "skip nested path in the root"
    binary_path: echo
    skip: False
    arguments:
      - -n
      - "{\"name\": \"John\",  \"age\": 33, \"city\":  {\"name\": \"Ontario\"}}"
    stdout:
      treat_as: json
    expected_stdout:
      treat_as: json
      ignore_fields:
        - age
        - city.name
      content: "{\"name\": \"John\",  \"age\": 30, \"city\": {\"name\": \"New York\"}}\n"

  - test: "skip item in list"
    binary_path: echo
    skip: False
    arguments:
      - -n
      - "{\"name\": \"John\",  \"age\": 33, \"city\":  [{\"name\": \"Ontario\"}, {\"name\": \"Ohio\"}]}"
    stdout:
      treat_as: json
    expected_stdout:
      treat_as: json
      ignore_fields:
        - age
        - city.0
      content: "{\"name\": \"John\",  \"age\": 30, \"city\": [{\"name\": \"New York\"}, {\"name\": \"Ohio\"}]}\n"

  - test: "skip nested item in list"
    binary_path: echo
    skip: False
    arguments:
      - -n
      - "{\"name\": \"John\",  \"age\": 33, \"city\":  [{\"name\": \"Ontario\", \"value\": 100}, {\"name\": \"Ohio\"}]}"
    stdout:
      treat_as: json
    expected_stdout:
      treat_as: json
      ignore_fields:
        - age
        - city.0.value
        - city.0.name
      content: "{\"name\": \"John\",  \"age\": 30, \"city\": [{\"name\": \"New York\", \"value\": 1}, {\"name\": \"Ohio\"}]}\n"

  - test: "skip not existing path"
    binary_path: echo
    arguments:
#      - -n
      - "{\"name\": \"John\",  \"age\": 100000}"
    stdout:
      treat_as: json
    expected_stdout:
      treat_as: json
      ignore_fields:
        - ages.0.0.name
#        - names
#        - age
      content: "{\"name\": \"Johnny\", \"age\": 9999999999999999}"
  - <<: *DEFAULT_TEST_PARAMETERS
    test: "Opening actual result json file."
    cwd: ./../../tests_data/examples/stdin/
    binary_path: cat
    skip: False
    arguments:
      - ignore_fields_actual.json
    expected_stdout:
      <<: *EXPECTED_STDOUT
      ignore_fields:
        [
          "meta.version",
          "info.parser.updated_at",
          "info.database.version",
          "data.3.1.second_key",
        ]
      file_path:  [*EXPECTED_RESULTS_DIR, ignore_fields_expected.json]
